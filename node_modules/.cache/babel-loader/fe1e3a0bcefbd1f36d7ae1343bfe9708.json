{"remainingRequest":"/home/runner/work/U2_Fundamentos_de_Software/U2_Fundamentos_de_Software/node_modules/thread-loader/dist/cjs.js!/home/runner/work/U2_Fundamentos_de_Software/U2_Fundamentos_de_Software/node_modules/babel-loader/lib/index.js!/home/runner/work/U2_Fundamentos_de_Software/U2_Fundamentos_de_Software/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/runner/work/U2_Fundamentos_de_Software/U2_Fundamentos_de_Software/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U2_Fundamentos_de_Software/U2_Fundamentos_de_Software/src/views/curso/Tema2.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/runner/work/U2_Fundamentos_de_Software/U2_Fundamentos_de_Software/src/views/curso/Tema2.vue","mtime":1758494003885},{"path":"/home/runner/work/U2_Fundamentos_de_Software/U2_Fundamentos_de_Software/babel.config.js","mtime":1758494003800},{"path":"/home/runner/work/U2_Fundamentos_de_Software/U2_Fundamentos_de_Software/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Fundamentos_de_Software/U2_Fundamentos_de_Software/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Fundamentos_de_Software/U2_Fundamentos_de_Software/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/home/runner/work/U2_Fundamentos_de_Software/U2_Fundamentos_de_Software/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Fundamentos_de_Software/U2_Fundamentos_de_Software/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Tema2.vue"],"names":[],"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","sourcesContent":["<template lang=\"pug\">\n.curso-main-container.pb-3\n  BannerInterno(:subTitulo=\"'2. Diagramas UML básicos'\")\n  .container.tarjeta.tarjeta--blanca.p-4.p-md-5.overflow-hidden\n\n    .row.mb-5.justify-content-center.align-items-center\n      .col-md-8.col-lg-4\n        figure\n          img(src=\"@/assets/curso/tema2/1.png\", data-aos=\"zoom-in\")\n      .col-lg-8\n        .bg-color-1.p-4(data-aos=\"fade-left\").mb-3\n          .row.align-items-center\n            .col-lg-auto\n              img(src=\"@/assets/curso/tema2/4.svg\", style=\"max-width: 90px\").mx-auto\n            .col-lg\n              p.mb-0 El Lenguaje Unificado de Modelado (UML, por sus siglas en inglés), es una herramienta clave para representar y planificar sistemas de <em>software</em>. Este lenguaje permite a desarrolladores, analistas y diseñadores, visualizar, especificar y documentar, distintos aspectos de un sistema, facilitando la comunicación entre equipos técnicos y no técnicos.\n        p.mb-0 UML se compone de diagramas clasificados en dos categorías principales: diagramas estructurales, que representan los elementos estáticos de un sistema, y diagramas de comportamiento, que describen las dinámicas e interacciones entre los elementos.\n    \n    #t_2_1.titulo-segundo(data-aos=\"flip-up\")\n      h2 #[span 2.1] Tipos de diagramas UML y su clasificación\n\n    .row.mb-5.justify-content-center.align-items-center\n      .col-md-8.col-lg-4.order-lg-2.mb-3\n        figure\n          img(src=\"@/assets/curso/tema2/2.png\", data-aos=\"zoom-in\")\n      .col-lg-8.order-lg-1\n        p Los diagramas UML (Unified Modeling Language) son herramientas esenciales para modelar y documentar sistemas, ofreciendo diferentes perspectivas a través de su clasificación en diagramas estructurales y de comportamiento.\n        h2.mb-3(data-aos=\"fade-right\") Diagramas estructurales\n        p Representan los elementos estáticos del sistema, como clases, objetos y componentes físicos.\n    \n    .bg-full-width.bg-fondo-2\n      .px-4.px-md-5.pb-md-3\n        .row.justify-content-center.mb-5\n          .col-lg-8.order-2\n            SlyderF(columnas=\"col-12 col-lg-6\")(data-aos=\"zoom-in\")\n        \n              .row.py-4.px-3.h-100\n                .col-10.offset-1.offset-md-0.col-md-12.shadow-app.p-3.py-md-5.px-md-4.bg-8.tarjeta.bg-color-white\n                  img(src='@/assets/curso/tema2/5.svg' alt='AvatarTop' , style=\"max-width: 90px\").mx-auto.mb-3\n                  h4.text-center.mb-4 Diagrama de clases\n                  p.mb-0.text-center Muestra la estructura estática de las clases, sus atributos, métodos y relaciones.  \n                  p.mb-0.text-center <b>Ejemplo:</b> una clase \"Vehículo\" con atributos como marca y modelo, y métodos como arrancar ().\n   \n              .row.py-4.px-3.h-100\n                .col-10.offset-1.offset-md-0.col-md-12.shadow-app.p-3.py-md-5.px-md-4.bg-8.tarjeta.bg-color-white\n                  img(src='@/assets/curso/tema2/5.svg' alt='AvatarTop' , style=\"max-width: 90px\").mx-auto.mb-3\n                  h4.text-center.mb-4 Diagrama de objetos\n                  p.text-center.mb-0 Representa instancias específicas de las clases, en un momento determinado.\n                  p.text-center.mb-0 <b>Ejemplo:</b> un objeto \"MiCoche\" basado en la clase \"Vehículo\".\n              .row.py-4.px-3.h-100\n                .col-10.offset-1.offset-md-0.col-md-12.shadow-app.p-3.py-md-5.px-md-4.bg-8.tarjeta.bg-color-white\n                  img(src='@/assets/curso/tema2/5.svg' alt='AvatarTop' , style=\"max-width: 90px\").mx-auto.mb-3\n                  h4.text-center.mb-4 Diagrama de componentes\n                  p.text-center.mb-0 Representa los componentes físicos del sistema, como archivos o módulos.  \n                  p.text-center.mb-0 <b>Ejemplo:</b> un módulo \"Autenticación\" que depende de una librería externa.\n              .row.py-4.px-3.h-100\n                .col-10.offset-1.offset-md-0.col-md-12.shadow-app.p-3.py-md-5.px-md-4.bg-8.tarjeta.bg-color-white\n                  img(src='@/assets/curso/tema2/5.svg' alt='AvatarTop' , style=\"max-width: 90px\").mx-auto.mb-3\n                  h4.text-center.mb-4 Diagrama de despliegue\n                  p.text-center.mb-0 Describe cómo el sistema se distribuye en <em>hardware</em>. \n                  p.text-center.mb-0 <b>Ejemplo:</b> un servidor web conectado a una base de datos en otro servidor. \n              .row.py-4.px-3.h-100\n                .col-10.offset-1.offset-md-0.col-md-12.shadow-app.p-3.py-md-5.px-md-4.bg-8.tarjeta.bg-color-white\n                  img(src='@/assets/curso/tema2/5.svg' alt='AvatarTop' , style=\"max-width: 90px\").mx-auto.mb-3\n                  h4.text-center.mb-4 Diagrama de paquetes\n                  p.text-center.mb-0 Agrupa clases u otros elementos relacionados.  \n                  p.text-center.mb-0 <b>Ejemplo:</b> un paquete \"Servicios\" que incluye clases como \"Usuario\" y \"Autenticación\".\n\n          .col-md-8.col-lg-4.order-1\n            figure\n              img(src='@/assets/curso/tema2/3.png', alt='')\n    \n        h2.mb-3(data-aos=\"fade-right\") Diagramas de comportamiento\n        p Modelan las interacciones y cambios de los elementos del sistema a lo largo del tiempo.\n\n    .bg-full-width.bg-color-info.mb-5\n      .p-4.p-md-5\n        .row.justify-content-center.align-items-center.mb-5\n          .col-lg-10\n            ImagenInfografica.color-secundario\n                template(v-slot:imagen)\n                  figure\n                    img(src='@/assets/curso/tema2/6.svg', alt='', style=\"max-width: 1106px;\").mx-auto\n\n                .bg-color-white.box-shadow.p-3(x=\"2.5%\" y=\"64.7%\" numero=\"+\")\n                  h5 Diagrama de casos de uso\n                  p Representa funcionalidades del sistema desde la perspectiva del usuario. \n                  p <b>Ejemplo:</b> un actor \"Cliente\" que realiza un caso de uso \"Realizar compra\".\n\n\n                .bg-color-white.box-shadow.p-3(x=\"10.5%\" y=\"35.5%\" numero=\"+\")\n                  h5 Diagrama de secuencia\n                  p Muestra interacciones entre objetos, en orden temporal. \n                  p <b>Ejemplo:</b> una solicitud de inicio de sesión, que pasa por un controlador, un servicio y una base de datos.\n\n\n                .bg-color-white.box-shadow.p-3(x=\"40%\" y=\"6%\" numero=\"+\")\n                  h5 Diagrama de actividades\n                  p Representa flujos de trabajo o procesos dentro del sistema. \n                  p <b>Ejemplo:</b> un flujo para \"Procesar pedido\" con pasos como \"Validar datos\" y \"Generar factura\".\n\n\n                .bg-color-white.box-shadow.p-3(x=\"72.5%\" y=\"35.3%\" numero=\"+\")\n                  h5 Diagrama de estados\n                  p Describe los estados que atraviesa un objeto, durante su ciclo de vida.\n                  p <b>Ejemplo:</b> un pedido que pasa de \"Creado\" a \"Enviado\" y luego a \"Entregado\".\n\n                .bg-color-white.box-shadow.p-3(x=\"78%\" y=\"65%\" numero=\"+\")\n                  h5 Diagrama de interacción\n                  p Combina interacciones específicas en diferentes escenarios. \n                  p <b>Ejemplo:</b> cómo interactúan un cliente, un sistema de pagos y un banco, durante una transacción.\n\n    h2.mb-3(data-aos=\"fade-right\") Ventajas del uso de UML\n    p El uso de UML ofrece múltiples ventajas que lo convierten en una herramienta indispensable, en el desarrollo de sistemas.\n\n    .bg-full-width.bg-fondo-2\n      .px-4.px-md-5.pb-md-3\n        .row.mb-5\n          .col-lg-4.mb-3.mb-lg-0(data-aos=\"fade-up\")\n            div.bg-color-11.h-100.p-4.tarjeta\n              h2 01\n              p.text-bold.text-center Facilita la comunicación\n              p.mb-0.text-center Proporciona un lenguaje común entre técnicos y no técnicos.\n          .col-lg-4.mb-3.mb-lg-0(data-aos=\"fade-down\")\n            div.bg-color-5.h-100.p-4.tarjeta\n              h2 02\n              p.text-bold.text-center Documentación estandarizada\n              p.mb-0.text-center Garantiza un registro claro, para referencia futura.\n          .col-lg-4(data-aos=\"fade-up\")\n            div.bg-color-11.h-100.p-4.tarjeta\n              h2 03\n              p.text-bold.text-center Reducción de complejidad\n              p.mb-0.text-center Divide el sistema en múltiples perspectivas.\n        .row.mb-5\n          .col-lg-4.mb-3.mb-lg-0(data-aos=\"fade-up\")\n            div.bg-color-11.h-100.p-4.tarjeta\n              h2 04\n              p.text-bold.text-center Mejora la planificación \n              p.mb-0.text-center Permite prever problemas antes de la implementación.\n          .col-lg-4.mb-3.mb-lg-0(data-aos=\"fade-down\")\n            div.bg-color-5.h-100.p-4.tarjeta\n              h2 05\n              p.text-bold.text-center Reutilización de modelos\n              p.mb-0.text-center Diagramas estructurales, pueden aplicarse en proyectos similares.\n          .col-lg-4(data-aos=\"fade-up\")\n            div.bg-color-11.h-100.p-4.tarjeta\n              h2 06\n              p.text-bold.text-center Soporte para metodologías ágiles\n              p.mb-0.text-center UML se adapta a enfoques de desarrollo. \n\n        h2.mb-3(data-aos=\"fade-right\") Diagrama de casos de uso\n        p Un diagrama de casos de uso, representa funcionalidades o requisitos desde la perspectiva del usuario, mostrando qué hace el sistema, no cómo lo hace. Este tipo de diagrama es clave en las primeras etapas de desarrollo, para definir objetivos claros y alinearlos con las necesidades del usuario.\n        p.mb-5.text-bold Los componentes del diagrama de casos de uso, son: \n\n    .row.align-items-center.mb-5.justify-content-center\n      .col-md-8.col-lg-4.order-lg-2\n        figure\n          img(src=\"@/assets/curso/tema2/7.png\", alt=\"\", data-aos=\"zoom-in\").mb-4.mb-lg-0\n      .col-lg-8.order-lg-1.mb-3.mb-lg-0\n        LineaTiempoD.large(data-aos=\"fade-left\")\n          div(numero=\"1\" titulo=\"Actores\")\n            p Representan a los usuarios o sistemas externos, que interactúan con el sistema. \n            p <b>Ejemplo:</b> un \"Cliente\" realiza una compra, mientras un \"Sistema de pagos\", valida el proceso.\n          div(numero=\"2\" titulo=\"Casos de uso\")\n            p Funcionalidades que el sistema ofrece.  \n            p <b>Ejemplo:</b> \"Reservar un vuelo\".\n          div(numero=\"3\" titulo=\"Sistema\")\n            p Define los límites del sistema representado.\n          div(numero=\"4\" titulo=\"Relaciones\")\n            p Conexiones entre actores y casos de uso:  \n            p.mb-0 - Asociación: relación directa entre un actor y un caso de uso. \n            p.mb-0 - Inclusión: un caso de uso que incluye otro, como parte de su funcionalidad. \n            p.mb-0 - Extensión: un caso de uso que se activa bajo ciertas condiciones.\n    \n    .bg-full-width.bg-color-9.mb-lg-5\n      .px-4.p-md-5\n        .row.justify-content-center.align-items-center\n          .col-lg-8.order-2\n            h2.mb-4(data-aos=\"flip-up\") Ejemplo de diagrama de casos de uso\n            p.mb-4(data-aos=\"fade-right\") El documento presenta un diagrama de casos de uso, para un sistema de biblioteca digital, con actores (Usuario y Administrador) y casos de uso clave, como Buscar libros, Reservar libros, Registrar usuarios y Actualizar catálogo de libros.\n\n            a.anexo.mb-4.bg-white.w-fit(:href=\"obtenerLink('/downloads/Anexo_2.pdf')\" target=\"_blank\")(data-aos=\"flip-up\")\n              .anexo__icono(:style=\"{'background-color': '#FCDFDB'}\")\n                img(src=\"@/assets/template/icono-pdf.svg\")\n              .anexo__texto\n                p <strong>Anexo. </strong> Ejemplo de diagrama de casos de uso.\n\n          .col-md-8.col-lg-4.order-1.mb-3.mb-lg-0\n            figure(data-aos=\"zoom-in\")\n              img(src='@/assets/curso/tema2/8.png', alt='')\n    \n    h2.mb-3(data-aos=\"fade-right\") Diagrama de clases\n\n    .row.mb-5.justify-content-center.align-items-center\n      .col-md-8.col-lg-4.order-2\n        figure\n          img(src=\"@/assets/curso/tema2/9.png\", data-aos=\"zoom-in\")\n      .col-lg-8.order-1\n        .bg-color-1.p-4(data-aos=\"fade-left\").mb-3\n          .row.align-items-center\n            .col-lg-auto\n              img(src=\"@/assets/curso/tema2/10.svg\", style=\"max-width: 90px\").mx-auto\n            .col-lg\n              p.mb-0 El diagrama de clases es fundamental en el diseño de sistemas, orientados a objetos, puesto que representa visualmente la estructura estática del sistema, detallando las clases, atributos, métodos y relaciones. Este diagrama se utiliza principalmente en la etapa de diseño, para definir la arquitectura del <em>software</em>.\n        p Un diagrama de clases modela la estructura estática del sistema, mediante la representación de clases, sus propiedades (atributos), comportamientos (métodos) y relaciones. Es crucial para lograr sistemas bien organizados, modulares y fáciles de mantener.\n        p.text-bold Los objetivos del diseño y construcción del diagrama de clases, son: \n\n    .bg-full-width-1.bg-fondo-2\n      .px-4.px-md-5.pb-md-3\n        div.row.justify-content-center.align-items-stretch.mb-5\n          div.col-lg-3.mb-4(data-aos=\"zoom-in-up\")\n            div.bg-color-white.box-shadow.px-4.py-5.h-100.tarjeta\n              img.mx-auto.d-block.mb-4(\n                src=\"@/assets/curso/tema2/11.svg\"\n                alt=\"\"\n                style=\"width: 90px\"\n              )\n              p.text-bold.text-center Definir la arquitectura del sistema\n              p.mb-0.text-center Establecer la organización de los componentes básicos mediante clases y relaciones.\n          \n          div.col-lg-3.mb-4(data-aos=\"zoom-in-up\")\n            div.bg-color-white.box-shadow.px-4.py-5.h-100.tarjeta\n              img.mx-auto.d-block.mb-4(\n                src=\"@/assets/curso/tema2/11.svg\"\n                alt=\"\"\n                style=\"width: 90px\"\n              )\n              p.text-bold.text-center Capturar los requisitos estructurales\n              p.mb-0.text-center Representar entidades del dominio y su comportamiento.\n          \n          div.col-lg-3.mb-4(data-aos=\"zoom-in-up\")\n            div.bg-color-white.box-shadow.px-4.py-5.h-100.tarjeta\n              img.mx-auto.d-block.mb-4(\n                src=\"@/assets/curso/tema2/11.svg\"\n                alt=\"\"\n                style=\"width: 90px\"\n              )\n              p.text-bold.text-center Facilitar la comunicación\n              p.mb-0.text-center Actuar como lenguaje visual entre analistas, diseñadores y desarrolladores.\n          div.col-lg-3.mb-4(data-aos=\"zoom-in-up\")\n            div.bg-color-white.box-shadow.px-4.py-5.h-100.tarjeta\n              img.mx-auto.d-block.mb-4(\n                src=\"@/assets/curso/tema2/11.svg\"\n                alt=\"\"\n                style=\"width: 90px\"\n              )\n              p.text-bold.text-center Soporte a la implementación\n              p.mb-0.text-center Servir de base para construir el diseño en código.\n      \n        h2.mb-3(data-aos=\"fade-right\") Componentes del diagrama de clases\n\n        .row.mb-5.justify-content-center.align-items-center\n          .col-md-8.col-lg-4\n            figure\n              img(src=\"@/assets/curso/tema2/12.png\", data-aos=\"zoom-in\")\n          .col-lg-8\n            .bg-color-6.p-4(data-aos=\"fade-left\").mb-3\n              .row.align-items-center\n                .col-lg-auto\n                  img(src=\"@/assets/curso/tema2/10.svg\", style=\"max-width: 90px\").mx-auto\n                .col-lg\n                  p.mb-0 El diagrama de clases es fundamental en el diseño de sistemas, orientados a objetos, puesto que representa visualmente la estructura estática del sistema, detallando las clases, atributos, métodos y relaciones. Este diagrama se utiliza principalmente en la etapa de diseño, para definir la arquitectura del <em>software</em>.\n    \n    .bg-full-width.bg-color-2\n      .px-4.px-md-5.py-4\n        .row.align-items-center\n          .col-lg-auto\n            img(src=\"@/assets/curso/tema2/14.svg\", style=\"max-width: 90px\").mx-auto\n          .col-lg(data-aos=\"fade-right\")\n            p.mb-0 <b>Clases:</b> representan entidades o componentes principales del sistema. Se representan como rectángulos divididos en tres secciones: \n    \n    .row.justify-content-center.align-items-center.bg-h85-3.mb-5\n      .col-lg-12\n        .row.justify-content-center.align-items-center\n          .col-lg-7(data-aos=\"fade-left\")\n            ol.lista-ol--cuadro(data-aos=\"fade-up\").mb-0\n              li.mb-0.d-flex.p-4\n                .lista-ol--cuadro__vineta\n                  span 1\n                p.mb-0 <b>Nombre: </b> identificación de la clase.\n              li.mb-0.d-flex.p-4 \n                .lista-ol--cuadro__vineta\n                  span 2\n                p.mb-0 <b>Atributos: </b> propiedades o datos que describen la clase.\n              li.mb-0.d-flex.p-4 \n                .lista-ol--cuadro__vineta\n                  span 3\n                p.mb-0 <b>Métodos: </b>funcionalidades o comportamientos de la clase.\n              \n          .col-lg-5(data-aos=\"zoom-in\")\n            img.img-fluid(src='@/assets/curso/tema2/15.svg', style=\"max-width:486px\", alt=\"\").mx-auto.mx-lg-0.ms-lg-auto.mb-4.mb-lg-0\n    \n    p.mb-5 El diagrama de clases es esencial para garantizar un diseño estructurado y comprensible, sirviendo de puente entre los requisitos del negocio y la implementación técnica.\n\n    .titulo-figura.mb-5\n      h5 <b>Figura</b> 1. \n      span Ejemplo estructura de una Clase\n    \n    .row.mb-5.justify-content-center\n      .col-lg-7\n        figure\n          img(src=\"@/assets/curso/tema2/16.png\", data-aos=\"zoom-in\")\n\n    .bg-full-width.bg-color-2.mb-5\n      .px-4.px-md-5.py-4\n        .row.align-items-center\n          .col-lg-auto\n            img(src=\"@/assets/curso/tema2/17.svg\", style=\"max-width: 90px\").mx-auto\n          .col-lg(data-aos=\"fade-right\")\n            p.mb-0 <b>Relaciones:</b> las relaciones conectan clases para modelar interacciones y dependencias dentro del sistema.\n    \n    h2.mb-3(data-aos=\"fade-right\") Tipos principales\n    p.mb-5 En los diagramas de clases, las relaciones representan cómo interactúan y se conectan las entidades del sistema.\n\n    .row.align-items-center.mb-5.justify-content-center\n      .col-md-8.col-lg-4.order-lg-2\n        figure\n          img(src=\"@/assets/curso/tema2/18.png\", alt=\"\", data-aos=\"zoom-in\").mb-4.mb-lg-0\n      .col-lg-8.order-lg-1\n        LineaTiempoD.large(data-aos=\"fade-left\")\n          div(numero=\"1\" titulo=\"Asociación\")\n            p Representa una relación básica entre dos clases. \n            p <b>Ejemplo:</b> una clase \"Usuario\" está asociada con \"Perfil\".\n          div(numero=\"2\" titulo=\"Agregación\")\n            p Representa una relación \"todo-parte\" débil, donde las partes pueden existir, independientemente del todo.  \n            p <b>Ejemplo:</b> una \"Biblioteca\" tiene muchos \"Libros\".\n          div(numero=\"3\" titulo=\"Composición\")\n            p Representa una relación \"todo-parte\" fuerte, donde las partes no pueden existir sin el todo.\n            p <b>Ejemplo:</b> un \"Pedido\" contiene \"Ítems de pedido\". \n          div(numero=\"4\" titulo=\"Herencia\")\n            p Representa una relación \"es-un\", donde una clase hija hereda atributos y métodos de una clase padre.  \n            p <b>Ejemplo:</b> \"Administrador\" hereda de \"Usuario\".\n          div(numero=\"5\" titulo=\"Dependencia\")\n            p Representa una relación temporal donde una clase utiliza otra, para una operación específica.\n            p <b>Ejemplo:</b> un \"Controlador\" depende de un \"Servicio\". \n    \n    .bg-full-width.bg-color-2\n      .px-4.px-md-5.py-4\n        .row.align-items-center\n          .col-lg-auto\n            img(src=\"@/assets/curso/tema2/14.svg\", style=\"max-width: 90px\").mx-auto\n          .col-lg(data-aos=\"fade-right\")\n            p.mb-0 <b>Visibilidad:</b> define el nivel de acceso a los atributos y métodos de una clase.\n    \n    .row.justify-content-center.align-items-center.bg-h85-3\n      .col-lg-12\n        .row.justify-content-center.align-items-center\n          .col-lg-7(data-aos=\"fade-left\")\n            ol.lista-ol--cuadro(data-aos=\"fade-up\").mb-0\n              li.mb-0.d-flex.p-4\n                .lista-ol--cuadro__vineta\n                  span 1\n                p.mb-0 <b>+Público: </b> accesible desde cualquier parte del sistema.\n              li.mb-0.d-flex.p-4 \n                .lista-ol--cuadro__vineta\n                  span 2\n                p.mb-0 <b>-Privado: </b> accesible solo dentro de la clase.\n              li.mb-0.d-flex.p-4 \n                .lista-ol--cuadro__vineta\n                  span 3\n                p.mb-0 <b>#Protegido: </b>accesible dentro de la clase y sus subclases.\n              \n          .col-lg-5(data-aos=\"zoom-in\")\n            img.img-fluid(src='@/assets/curso/tema2/19.svg', style=\"max-width:486px\", alt=\"\").mx-auto.mx-lg-0.ms-lg-auto.mb-4.mb-lg-0\n    .bg-full-width.bg-color-2\n      .px-4.px-md-5.py-4\n        .row.align-items-center\n          .col-lg-auto\n            img(src=\"@/assets/curso/tema2/17.svg\", style=\"max-width: 90px\").mx-auto\n          .col-lg(data-aos=\"fade-right\")\n            p.mb-0 <b>Interfaces:</b> las interfaces representan contratos que otras clases deben implementar.\n    \n    .row.justify-content-center.align-items-center.bg-h85-3\n      .col-lg-12\n        .row.justify-content-center.align-items-center\n          .col-lg-7(data-aos=\"fade-left\").order-2\n            p <b>Ejemplo:</b> una interfaz \"Autenticable\" define un método autenticar () que debe ser implementado por las clases \"Usuario\" y \"Administrador\".\n          .col-lg-5(data-aos=\"zoom-in\").order-1\n            img.img-fluid(src='@/assets/curso/tema2/20.svg', style=\"max-width:486px\", alt=\"\").mx-auto.mx-lg-0.ms-lg-auto.mb-4.mb-lg-0\n    \n    .bg-full-width.bg-color-2\n      .px-4.px-md-5.py-4\n        .row.align-items-center\n          .col-lg-auto\n            img(src=\"@/assets/curso/tema2/17.svg\", style=\"max-width: 90px\").mx-auto\n          .col-lg(data-aos=\"fade-right\")\n            p.mb-0 <b>Clases abstractas: </b> son clases que no pueden ser instanciadas directamente y sirven como base para otras clases.\n\n    .row.justify-content-center.align-items-center.bg-h85-3.mb-5\n      .col-lg-12\n        .row.justify-content-center.align-items-center\n          .col-lg-7(data-aos=\"fade-left\")\n            p <b>Ejemplo:</b> una clase \"Vehículo\" con métodos abstractos arrancar () y detener ().\n            p Estos elementos son fundamentales para modelar la estructura y las interacciones de los sistemas orientados a objetos, asegurando claridad y coherencia en el diseño.\n          .col-lg-5(data-aos=\"zoom-in\")\n            img.img-fluid(src='@/assets/curso/tema2/21.svg', style=\"max-width:486px\", alt=\"\").mx-auto.mx-lg-0.ms-lg-auto.mb-4.mb-lg-0\n    \n    .bg-full-width.bg-color-9.mb-lg-5\n      .px-4.p-md-5\n        .row.justify-content-center.align-items-center\n          .col-lg-8.order-2\n            h2.mb-4(data-aos=\"flip-up\") Relaciones entre clases en el diagrama de clases\n            p.mb-4(data-aos=\"fade-right\") En el documento se profundiza en las relaciones entre clases dentro de un diagrama de clases, destacando su importancia para modelar la estructura lógica de un sistema. Se describen los tipos principales de relaciones, como la asociación, agregación, composición, generalización, dependencia y realización, detallando sus características, representaciones gráficas y ejemplos prácticos.\n\n            a.anexo.mb-4.bg-white.w-fit(:href=\"obtenerLink('/downloads/Anexo_3.pdf')\" target=\"_blank\")(data-aos=\"flip-up\")\n              .anexo__icono(:style=\"{'background-color': '#FCDFDB'}\")\n                img(src=\"@/assets/template/icono-pdf.svg\")\n              .anexo__texto\n                p <strong>Anexo. </strong> Relaciones entre clases en el diagrama de clases.\n\n          .col-md-8.col-lg-4.order-1.mb-3.mb-lg-0\n            figure(data-aos=\"zoom-in\")\n              img(src='@/assets/curso/tema2/8.png', alt='')\n    \n    h2.mb-3(data-aos=\"fade-right\") Diagrama de secuencia\n\n    .row.mb-5.justify-content-center.align-items-center\n      .col-md-8.col-lg-4.order-2\n        figure\n          img(src=\"@/assets/curso/tema2/22.png\", data-aos=\"zoom-in\")\n      .col-lg-8.order-1.mb-3.mb-lg-0\n        .bg-color-2.p-4(data-aos=\"fade-left\").mb-3\n          .row.align-items-center\n            .col-lg-auto\n              img(src=\"@/assets/curso/tema2/23.svg\", style=\"max-width: 90px\").mx-auto\n            .col-lg\n              p.mb-0 El diagrama de secuencia es una herramienta clave en UML para representar la interacción de objetos en el tiempo para realizar funciones específicas. Este diagrama se centra en el orden cronológico de los mensajes y las interacciones entre actores y sistemas.\n        p.mb-0 Es un modelo dinámico que describe:\n    \n    .bg-full-width.bg-fondo-2\n      .px-4.px-md-5.pb-md-3\n        div.row.justify-content-center.align-items-stretch.mb-5\n          div.col-lg-4.mb-4(data-aos=\"zoom-in-up\")\n            div.bg-color-white.box-shadow.px-4.py-5.h-100.tarjeta\n              img.mx-auto.d-block.mb-4(\n                src=\"@/assets/curso/tema2/24.svg\"\n                alt=\"\"\n                style=\"width: 90px\"\n              )\n              p.mb-0.text-center El orden de las interacciones o mensajes.\n          \n          div.col-lg-4.mb-4(data-aos=\"zoom-in-up\")\n            div.bg-color-white.box-shadow.px-4.py-5.h-100.tarjeta\n              img.mx-auto.d-block.mb-4(\n                src=\"@/assets/curso/tema2/24.svg\"\n                alt=\"\"\n                style=\"width: 90px\"\n              )\n              p.mb-0.text-center El rol de cada actor u objeto en el proceso.\n          \n          div.col-lg-4.mb-4(data-aos=\"zoom-in-up\")\n            div.bg-color-white.box-shadow.px-4.py-5.h-100.tarjeta\n              img.mx-auto.d-block.mb-4(\n                src=\"@/assets/curso/tema2/24.svg\"\n                alt=\"\"\n                style=\"width: 90px\"\n              )       \n              p.mb-0.text-center El tiempo relativo de las operaciones, en formato secuencial.\n    \n        p.mb-5 Se utiliza para modelar casos de uso, analizar requisitos y detallar el diseño de sistemas orientados a objetos.\n        h2.mb-3(data-aos=\"fade-right\") Componentes del diagrama de secuencia\n        p Los diagramas de secuencia, son una herramienta clave en el modelado de sistemas, dado que detallan cómo interactúan los actores y objetos, en el tiempo.\n    \n    .row.align-items-center.mb-5.justify-content-center\n      .col-md-8.col-lg-4.order-lg-2\n        figure\n          img(src=\"@/assets/curso/tema2/25.png\", alt=\"\", data-aos=\"zoom-in\").mb-4.mb-lg-0\n      .col-lg-8.order-lg-1.mb-3\n        LineaTiempoD.large(data-aos=\"fade-left\")\n          div(numero=\"1\" titulo=\"Actores\")\n            p Representan usuarios o sistemas externos que interactúan con el sistema.  \n            p <b>Ejemplo:</b> Usuario, Cliente, Administrador.\n          div(numero=\"2\" titulo=\"Objetos\")\n            p Clases o instancias participantes en el proceso.   \n            p <b>Ejemplo:</b> CarritoDeCompras, BaseDeDatos.\n          div(numero=\"3\" titulo=\"Línea de vida (<em>Lifeline</em>)\")\n            p Representa la existencia de un actor u objeto durante la interacción. Es una línea vertical debajo del actor u objeto, indicando su tiempo de vida en el proceso.\n          div(numero=\"4\" titulo=\"Mensajes\")\n            p Comunicaciones entre objetos o entre actores y objetos: \n            p - Síncrono: el emisor espera una respuesta (línea sólida con flecha llena). \n            p - Asíncrono: el emisor no espera una respuesta (línea sólida con flecha vacía). \n            p - Respuesta: respuesta a un mensaje síncrono (línea punteada con flecha llena). \n            p <b>Ejemplo:</b> método autenticar ().\n    \n    .row.align-items-center.mb-5.justify-content-center\n      .col-md-8.col-lg-4.mb-3.mb-lg-0\n        figure\n          img(src=\"@/assets/curso/tema2/26.png\", alt=\"\", data-aos=\"zoom-in\").mb-4.mb-lg-0\n      .col-lg-8\n        LineaTiempoD.large(data-aos=\"fade-left\")\n          div(numero=\"5\" titulo=\"Bloques de activación\")\n            p Indican el período durante el cual un objeto procesa un mensaje. Se representan como rectángulos sobre la línea de vida.\n          div(numero=\"6\" titulo=\"Condiciones y bifurcaciones\")\n            p Decisiones en el flujo de interacción, representadas como notas con texto condicional o marcadores.   \n            p <b>Ejemplo:</b> [si autenticación exitosa].\n          div(numero=\"7\" titulo=\"Regiones de bucle o fragmentos combinados\")\n            p Representan repeticiones o condiciones en la interacción, marcadas con palabras clave como <em>loop, alt o opt</em>.\n    \n    p.mb-5 El diagrama de secuencia es una herramienta esencial para analizar dinámicas del sistema, facilitando la planificación y el diseño detallado de las interacciones entre componentes.\n\n    .titulo-figura.mb-5\n      h5 <b>Figura</b> 2. \n      span Diagrama de secuencia, componentes\n    \n    .row.mb-5.justify-content-center.bg-color-7.p-4\n      .col-lg-7\n        figure\n          img(src=\"@/assets/curso/tema2/27.png\", data-aos=\"zoom-in\")\n    \n\n    h2.mb-3(data-aos=\"fade-right\") Ventajas del diagrama de secuencia\n\n    p.mb-5 El diagrama de secuencia es una herramienta esencial en el desarrollo de <em>software</em>, debido a las múltiples ventajas que ofrece.\n\n    .bg-full-width.bg-fondo-2.mb-5\n      .px-4.px-md-5.pb-md-3\n        .row.justify-content-center.mb-5\n          .col-lg-8.order-2\n            SlyderF(columnas=\"col-12 col-lg-6\")(data-aos=\"zoom-in\")\n        \n              .row.py-4.px-3.h-100\n                .col-10.offset-1.offset-md-0.col-md-12.shadow-app.p-3.py-md-5.px-md-4.bg-8.tarjeta.bg-color-white\n                  img(src='@/assets/curso/tema2/29.svg' alt='AvatarTop' , style=\"max-width: 90px\").mx-auto.mb-3\n                  h4.text-center.mb-4 Claridad en las interacciones\n                  p.mb-0.text-center Permite detallar la lógica de procesos complejos, mostrando cada interacción entre actores y objetos.\n   \n              .row.py-4.px-3.h-100\n                .col-10.offset-1.offset-md-0.col-md-12.shadow-app.p-3.py-md-5.px-md-4.bg-8.tarjeta.bg-color-white\n                  img(src='@/assets/curso/tema2/29.svg' alt='AvatarTop' , style=\"max-width: 90px\").mx-auto.mb-3\n                  h4.text-center.mb-4 Documentación completa\n                  p.text-center.mb-0 Facilita la documentación de flujos específicos y la colaboración entre objetos, para alcanzar un objetivo.\n              .row.py-4.px-3.h-100\n                .col-10.offset-1.offset-md-0.col-md-12.shadow-app.p-3.py-md-5.px-md-4.bg-8.tarjeta.bg-color-white\n                  img(src='@/assets/curso/tema2/29.svg' alt='AvatarTop' , style=\"max-width: 90px\").mx-auto.mb-3\n                  h4.text-center.mb-4 Soporte al diseño de <em>software</em>\n                  p.text-center.mb-0 Proporciona una base sólida para implementar la lógica de métodos y funciones.\n              .row.py-4.px-3.h-100\n                .col-10.offset-1.offset-md-0.col-md-12.shadow-app.p-3.py-md-5.px-md-4.bg-8.tarjeta.bg-color-white\n                  img(src='@/assets/curso/tema2/29.svg' alt='AvatarTop' , style=\"max-width: 90px\").mx-auto.mb-3\n                  h4.text-center.mb-4 Facilita la comunicación\n                  p.text-center.mb-0 Es útil para presentar el diseño a desarrolladores, analistas y partes interesadas.\n              .row.py-4.px-3.h-100\n                .col-10.offset-1.offset-md-0.col-md-12.shadow-app.p-3.py-md-5.px-md-4.bg-8.tarjeta.bg-color-white\n                  img(src='@/assets/curso/tema2/29.svg' alt='AvatarTop' , style=\"max-width: 90px\").mx-auto.mb-3\n                  h4.text-center.mb-4 Detección de problemas tempranos\n                  p.text-center.mb-0 Ayuda a identificar lagunas o inconsistencias en el flujo de mensajes, antes de la implementación.\n          .col-md-8.col-lg-4.order-1\n            figure\n              img(src='@/assets/curso/tema2/28.png', alt='')\n    \n    .bg-full-width.bg-color-15.mb-5\n      .p-4.px-md-5.pb-md-3\n        .row.mb-5.justify-content-center.align-items-center\n          .col-md-8.col-lg-5.order-2\n            figure\n              img(src=\"@/assets/curso/tema2/30.png\", data-aos=\"zoom-in\")\n          .col-lg-7.order-1\n            p.text-bold Ejemplo de diagrama de secuencia\n            p.mb-0 <b>Escenario:</b> proceso de compra en línea.\n            p Un usuario selecciona productos en un carrito, confirma su pedido y realiza el pago.\n\n            p.text-bold Participantes:\n\n            p.mb-0 ●\tUsuario (actor).\n            p.mb-0 ●\tCarritoDeCompras (objeto).\n            p.mb-0 ●\tSistemaDePagos (objeto).\n            p ●\tBaseDeDatos (objeto).\n\n            p.text-bold Flujo:\n\n            ol.lista-ol--cuadro(data-aos=\"fade-up\").mb-0\n              li.mb-0.d-flex.p-2\n                .lista-ol--cuadro__vineta\n                  span 1\n                p.mb-0 El usuario selecciona un producto y lo agrega al carrito.\n              li.mb-0.d-flex.p-2 \n                .lista-ol--cuadro__vineta\n                  span 2\n                p.mb-0 El sistema confirma la adición al carrito.\n              li.mb-0.d-flex.p-2 \n                .lista-ol--cuadro__vineta\n                  span 3\n                p.mb-0 El usuario realiza el pedido.\n              li.mb-0.d-flex.p-2 \n                .lista-ol--cuadro__vineta\n                  span 4\n                p.mb-0 El sistema verifica el inventario (consulta a la base de datos).\n              li.mb-0.d-flex.p-2 \n                .lista-ol--cuadro__vineta\n                  span 5  \n                p.mb-0 El usuario realiza el pago.\n              li.mb-0.d-flex.p-2 \n                .lista-ol--cuadro__vineta\n                  span 6  \n                p.mb-0 El sistema de pagos procesa la transacción.\n              li.mb-0.d-flex.p-2 \n                .lista-ol--cuadro__vineta\n                  span 7\n                p.mb-0 El sistema confirma el pedido al usuario.\n              \n            p Es un modelo dinámico que describe:\n    \n    p.mb-5 Este ejemplo ilustra cómo los participantes interactúan en un proceso secuencial, facilitando la comprensión del flujo y las responsabilidades de cada componente.\n    \n    .titulo-figura.mb-5\n      h5 <b>Figura</b> 3. \n      span Diagrama de secuencia \n    \n    .row.mb-5.justify-content-center.bg-color-7.p-4\n      .col-lg-7\n        figure\n          img(src=\"@/assets/curso/tema2/31.png\", data-aos=\"zoom-in\")\n    \n    .bg-full-width.bg-color-9.mb-lg-5\n      .px-4.p-md-5\n        .row.justify-content-center.align-items-center\n          .col-lg-8.order-2\n            h2.mb-4(data-aos=\"flip-up\") Diseño orientado a objetos: conceptos de clases, objetos y herencia\n            p.mb-4(data-aos=\"fade-right\") El documento analiza el diseño orientado a objetos, destacando los conceptos fundamentales de clases, objetos y herencia. Una clase se define como un plano conceptual que establece atributos y métodos comunes, mientras que los objetos son instancias concretas de estas clases, con un estado, comportamiento e identidad propios.\n\n            a.anexo.mb-4.bg-white.w-fit(:href=\"obtenerLink('/downloads/Anexo_4.pdf')\" target=\"_blank\")(data-aos=\"flip-up\")\n              .anexo__icono(:style=\"{'background-color': '#FCDFDB'}\")\n                img(src=\"@/assets/template/icono-pdf.svg\")\n              .anexo__texto\n                p <strong>Anexo. </strong> Diseño orientado a objetos: conceptos de clases, objetos y herencia.\n\n          .col-md-8.col-lg-4.order-1.mb-3.mb-lg-0\n            figure(data-aos=\"zoom-in\")\n              img(src='@/assets/curso/tema2/32.png', alt='')\n    \n    .bg-full-width.border-top.actividad.bg-color-actividad\n      .p-4.p-md-5\n        #Actividad                \n          <Actividad :cuestionario=\"cuestionario\"/>\n    \n\n    .bg-full-width.border-top.color-primario\n      .p-4.p-md-5\n        h2(data-aos=\"fade-left\") MATERIAL COMPLEMENTARIO\n        .row.material-complementario\n          .col-12.col-md-6.col-lg-7\n            p Los invitamos a explorar el material complementario de este curso, en esta sección encontrará recursos que le permitirán profundizar  y enriquecer su aprendizaje en los temas tratados en esta unidad.\n\n            p.d-flex.my-4\n              img.me-3(src='@/assets/componentes/link.svg' :style=\"{'max-width':'16px'}\")\n              a(href=\"https://openlibrary.org/works/OL3526668W/UML_for_Java_programmers\" target=\"_blank\" rel=\"noopener noreferrer\") Robert, M. (2003). UML for Java programmers. Addison-Wesley. \n            p.d-flex.my-4\n              img.me-3(src='@/assets/componentes/link.svg' :style=\"{'max-width':'16px'}\")\n              a(href=\"https://www.thecodingdiva.com/blog/coding/unified-modeling-language \" target=\"_blank\" rel=\"noopener noreferrer\") A Comprehensive Guide to Unified Modeling Language. \n            p.d-flex.my-4\n              img.me-3(src='@/assets/componentes/link.svg' :style=\"{'max-width':'16px'}\")\n              a(href=\"https://miro.com/es/diagrama/diagrama-uml/ \" target=\"_blank\" rel=\"noopener noreferrer\") Miro. \n\n            \n\n            p.d-flex.my-4\n              img.me-3(src='@/assets/template/icono-yt.svg' :style=\"{'max-width':'16px'}\")\n              a(href=\"https://www.youtube.com/watch?v=wfSrFbob9-8 \" target=\"_blank\" rel=\"noopener noreferrer\") NicoPaez. (2017). UML: Introducción. \n\n          .col-12.col-md-6.col-lg-3.offset-lg-1\n            figure\n              img(src='@/assets/componentes/material-complementario.svg', alt='')\n\n</template>\n\n<script>\nimport Actividad from '@/components/actividad/Actividad.vue'\nexport default {\n  name: 'Tema2',\n  components: {\n    Actividad,\n  },\n  data() {\n    return {\n      cuestionario: {\n        tema: 'Principios de Diseño de <em>Software</em>',\n        titulo: 'Ponte a prueba',\n        introduccion:\n          'Demuestra lo que aprendiste en esta unidad y pon a prueba tus conocimientos.',\n        barajarPreguntas: true,\n        preguntas: [\n          {\n            id: 1,\n            texto:\n              '¿Qué se entiende por \"cohesión\" en los principios de diseño de <em>software</em>? ',\n            imagen: '',\n            barajarRespuestas: true,\n            opciones: [\n              {\n                id: 'a',\n                texto: 'La relación entre diferentes módulos',\n                esCorrecta: false,\n              },\n              {\n                id: 'b',\n                texto: 'El grado en que un módulo realiza una tarea específica',\n                esCorrecta: true,\n              },\n              {\n                id: 'c',\n                texto: 'La capacidad de un sistema de trabajar sin fallos',\n                esCorrecta: false,\n              },\n              {\n                id: 'd',\n                texto: 'La integración de sistemas externos al proyecto',\n                esCorrecta: false,\n              },\n            ],\n            mensaje_correcto:\n              'La cohesión se refiere a qué tan enfocado y específico es un módulo dentro de un sistema. Un módulo con alta cohesión tiene responsabilidades bien definidas, lo que facilita su mantenimiento.',\n            mensaje_incorrecto: 'Lo sentimos, su respuesta no es la correcta.',\n          },\n          {\n            id: 2,\n            texto: 'El acoplamiento bajo entre módulos implica',\n            imagen: '',\n            barajarRespuestas: true,\n            opciones: [\n              {\n                id: 'a',\n                texto: 'Una alta dependencia entre módulos',\n                esCorrecta: false,\n              },\n              {\n                id: 'b',\n                texto: 'Una baja dependencia entre módulos',\n                esCorrecta: true,\n              },\n              {\n                id: 'c',\n                texto: 'Una interdependencia compleja entre módulos',\n                esCorrecta: false,\n              },\n              {\n                id: 'd',\n                texto: 'Ninguna de las anteriores',\n                esCorrecta: false,\n              },\n            ],\n            mensaje_correcto:\n              'Un bajo acoplamiento significa que los módulos están poco dependientes entre sí, lo que facilita la modificación y reutilización del código.',\n            mensaje_incorrecto: 'Lo sentimos, su respuesta no es la correcta.',\n          },\n          {\n            id: 3,\n            texto:\n              '¿Cuál de los siguientes diagramas UML describe cómo interactúan los objetos a lo largo del tiempo?',\n            imagen: '',\n            barajarRespuestas: true,\n            opciones: [\n              {\n                id: 'a',\n                texto: 'Diagrama de casos de uso',\n                esCorrecta: false,\n              },\n              {\n                id: 'b',\n                texto: 'Diagrama de clases',\n                esCorrecta: false,\n              },\n              {\n                id: 'c',\n                texto: 'Diagrama de secuencia',\n                esCorrecta: true,\n              },\n              {\n                id: 'd',\n                texto: 'Diagrama de actividad',\n                esCorrecta: false,\n              },\n            ],\n            mensaje_correcto:\n              'Los diagramas de secuencia muestran cómo los objetos interactúan a través del tiempo, ilustrando el flujo de mensajes entre ellos durante un proceso específico.',\n            mensaje_incorrecto: 'Lo sentimos, su respuesta no es la correcta.',\n          },\n          {\n            id: 4,\n            texto:\n              '¿Qué característica define a un diagrama de clases UML? (API)',\n            imagen: '',\n            barajarRespuestas: true,\n            opciones: [\n              {\n                id: 'a',\n                texto: 'Muestra la secuencia de eventos entre actores',\n                esCorrecta: false,\n              },\n              {\n                id: 'b',\n                texto: 'Representa las clases, sus atributos y métodos',\n                esCorrecta: true,\n              },\n              {\n                id: 'c',\n                texto: 'Muestra el flujo de control entre objetos',\n                esCorrecta: false,\n              },\n              {\n                id: 'd',\n                texto:\n                  'Representa las actividades que se realizan en el sistema',\n                esCorrecta: false,\n              },\n            ],\n            mensaje_correcto:\n              'El diagrama de clases es uno de los diagramas estructurales más importantes en UML, y se utiliza para mostrar las clases de un sistema, sus atributos y los métodos o funciones que ejecutan.',\n            mensaje_incorrecto: 'Lo sentimos, su respuesta no es la correcta.',\n          },\n          {\n            id: 5,\n            texto:\n              '¿Qué concepto en diseño orientado a objetos permite que una clase herede comportamientos de otra? ',\n            imagen: '',\n            barajarRespuestas: true,\n            opciones: [\n              {\n                id: 'a',\n                texto: 'Polimorfismo',\n                esCorrecta: false,\n              },\n              {\n                id: 'b',\n                texto: 'Encapsulamiento',\n                esCorrecta: false,\n              },\n              {\n                id: 'c',\n                texto: 'Herencia',\n                esCorrecta: true,\n              },\n              {\n                id: 'd',\n                texto: 'Abstracción',\n                esCorrecta: false,\n              },\n            ],\n            mensaje_correcto:\n              'La herencia permite que una clase derive de otra, heredando sus atributos y métodos, lo que facilita la reutilización del código.',\n            mensaje_incorrecto: 'Lo sentimos, su respuesta no es la correcta.',\n          },\n        ],\n        mensaje_final_aprobado:\n          '¡Felicidades! Has superado la prueba con éxito.',\n        mensaje_final_reprobado:\n          'Te recomendamos repasar nuevamente la unidad para reforzar los conceptos clave antes de volver a intentarlo.',\n      },\n    }\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.$aosRefresh()\n    })\n  },\n}\n</script>\n\n<style lang=\"sass\">\n.bg-color-actividad\n  background-color: #EBF1F5\n</style>\n"],"sourceRoot":"src/views/curso"}]}